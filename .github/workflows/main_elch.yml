name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: elch
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.11'
  RESOURCE_GROUP: elch_group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Stop Azure Web App
        run: |
          az webapp stop --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
          echo "Waiting 15s for app to fully stop..."
          sleep 15

      - name: Ensure startup.sh is executable
        run: chmod +x ./startup.sh

      - name: Deploy to Azure Web App with retry
        run: |
          max_attempts=5
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Deployment attempt $attempt..."
            az webapp deployment source config-zip \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --name ${{ env.AZURE_WEBAPP_NAME }} \
              --src ./python-app.zip && break
            echo "Deployment failed, retrying in 10s..."
            sleep 10
            attempt=$((attempt+1))
          done

      - name: Start Azure Web App
        run: az webapp start --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}

      - name: Verify deployment
        run: |
          echo "Checking application health..."
          sleep 30
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/healthz || echo "000")
          if [ "$response" = "200" ]; then
            echo "✅ App is healthy"
          else
            echo "⚠️ Health check returned: $response"
          fi
